server:
  port: 9001
spring:
  application:
    name: kafka
#### kafka????? begin ####
# ??kafka server?????????????????
  kafka:
    bootstrap-servers: 192.168.22.252:19092,192.168.22.252:29092,192.168.22.252:39092
    producer:
      # ????????????leader?????repli???????leader??????????????
      # ?retris?0??produce?????retirs?????repli??????leader????????????
      retries: 0
# ???????????,produce????????????
      batch-size: 16384
# produce???????????????buffer.memory?????
      buffer-memory: 33554432
#procedure??leader?????????????????????????????????????????
#acks = 0 ????????????????????????????????????????????????????????
# ??????????????????????????????????????????????????????????-1?
#acks = 1 ????leader?????????????????????????????????????????????leader??????????????????????????????????????
#acks = all ????leader?????????????????????????????????????????????????????????????acks = -1????
#????????all, -1, 0, 1
      acks: 1
# ????key??????????
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#### kafka????? end ####
  logs:
    kafka:
      bootstrap-servers: 192.168.22.211:32092
      consumer:
        group-id: test1
        # smallest?largest??????smallest??0????????largest?logfile?offset??????????????smallest
        auto-offset-reset: earliest
        # enable.auto.commit:true --> ??????offset
        enable-auto-commit: true
        #??'enable.auto.commit'?true????????????Kafka????????????????5000?
        auto-commit-interval: 1000
        # ????key??????????
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
